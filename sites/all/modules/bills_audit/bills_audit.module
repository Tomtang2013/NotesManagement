<?php

// $Id: bills_audit.info,v 1.4 2011/07/04 13:25:57 dries Exp $

/**
 * Implementation of hook_init
 */
function bills_audit_init() {
}

/**
 * Implements hook_help().
 */
function bills_audit_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bills_audit':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('票据审核');
            return $output;
    }
}

/**
 * Implements hook_permission().
 */
function bills_audit_permission() {
    return array(
        'bills_audit' => array(
            'title' => t('票据审核'),
        ),
    );
}

function bills_audit_menu() {
    $items = array();
    $items['billsaudit'] = array(
        'title' => t('票据审核'),
        'page callback' => 'bill_audit_status_call_back',
        'access arguments' => array('bills_audit'),
        'weight' => 20,
    );

    $items['billsauditsubmit/%/%'] = array(
        'page callback' => 'bills_audit_submit',
        'page arguments' => array(1,2),
        'access arguments' => array('bills_audit'),
        'type' => MENU_CALLBACK,
    );

    $items['billsauditalloc/%'] = array(
        'page callback' => 'bills_audit_alloc',
        'page arguments' => array(1),
        'access arguments' => array('bills_audit'),
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function bill_audit_status_call_back(){
    $header = array(
        array('data' => t('往来单位')),
        array('data' => t('申请状态')),
        array('data' => t('票据金额(元)')),
        array('data' => t('票据类型')),
        array('data' => t('票据数量')),
        array('data' => t('申请时间')),
        array('data' => t('票据分配')),
    );

    $query = db_select('bills_apply', 'ba')
                    ->extend('PagerDefault');

    $fields = array('unit', 'status','amount','bills_type', 'bills_number','date','apply_id');

    $query->fields('ba', $fields);
    $result = $query
        ->limit(10)
        ->orderBy('ba.unit')
        ->execute();

    $rows = array();
    foreach ($result as $row) {
        $row->date = gmdate("Y-m-d", $row->date);
        $row->apply_id = l('详细','billsauditalloc/'. $row->apply_id, array('attributes'=>array('class'=>'audit_operating')));
        $rows[] = array('data' => (array) $row);
    }

    $build['PagerDefault'] = array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
    );

    $build['pager_pager'] = array('#theme' => 'pager');

    $pagecontent = "<h1><strong>票据审核</strong></h1>";
    $pagecontent .= message_display();
    $pagecontent .= drupal_render($build);
    $pagecontent .= theme('bills_audit');

    return $pagecontent;
}

function bills_audit_submit($apply_id,$operator){
    if($operator == "approve"){
        bills_apply_approve($apply_id);
    } else {
        bills_disapply_approve($apply_id);
    }
}

function bills_apply_approve($apply_id){
    while(lock_acquire('bills_apply_approve')){
        try {
            $transaction = db_transaction();
            $apply = get_apply_by_id($apply_id);
            $billsnos = get_available_number($apply['bills_type']);
            $ava_number = count($billsnos);
            if ($apply['bills_number'] + 0 > $ava_number + 0) {
                drupal_set_message(t("请刷新页面，该类型票据可用数量已不足"), 'error');
            } else {
                $result = 0;

                ticket($apply, $billsnos);
                $result = db_update('bills_apply')
                                ->fields(array('status' => '批准'))
                                ->condition('apply_id', $apply_id)
                                ->execute();
                if ($result > 0) {
                    drupal_set_message(t("审核成功，申请已经被批准"), 'status');
                } else {
                    drupal_set_message(t("票据审核失败，请联系管理员"), 'error');
                }
            }
        } catch (Exception $e) {
            $transaction->rollback();
            watchdog_exception('bills audit error', $e);
        }
        lock_release('bills_apply_approve');
        unset($transaction_variable);
        break;
    }
    
}

function ticket($apply,$billsnos){
    $allocs = get_alloc_by_apply_id($apply['apply_id']);
    $length = count($billsnos);
    $j = 0;
    foreach($allocs as $alloc){
        $update = db_update('bills')
                ->fields(array(
                    'alloc_id' => $alloc->bills_alloc_id,
                    'status' => '已申领',
                ));
        $or = db_or();
        for($i = 0; $i<$alloc->bills_number;$i++){
            if($j<$length){
                $or->condition('billsno',$billsnos[$j]->billsno,'=');
                $j++;
            }
        }
        $update->condition($or);
        $update->execute();
    }
}

function get_alloc_by_apply_id($apply_id){
    $query = db_select('bills_allocation','bac')
             ->fields('bac')
             ->condition('apply_id', $apply_id);
    $allocs = $query->execute()->fetchAll();
    return $allocs;
}

function bills_disapply_approve($apply_id){
        $result = db_update('bills_apply')
                            ->fields(array('status' => '拒绝'))
                            ->condition('apply_id', $apply_id)
                            ->execute();
        if($result > 0) {
            drupal_set_message(t("审核成功，申请已经被拒绝"), 'status');
        } else {
            drupal_set_message(t("票据审核失败，请联系管理员"), 'error');
        }
}

function bills_audit_alloc($apply_id){
    $pagecontent = "<h1><strong>申请详细</strong></h1>";
    $pagecontent .= build_alloc_table($apply_id);
    $pagecontent .= build_audit_info($apply_id);
    echo $pagecontent;
}

function build_audit_info($apply_id){
    $apply = get_apply_by_id($apply_id);
    $available_number = count(get_available_number($apply['bills_type']));
    $pagecontent = '';
    $can_approve = 1;
    $msg = '';
    if($apply['bills_number']+0 > $available_number+0 ){
        $span_class = 'unavailableno';
        $msg = '可用票据不足';
        $can_approve = 0;
    } else {
        $span_class = 'availableno';
    }
    $pagecontent .= '<div class="bills_form_row">
                        <label for="available_billsno">可用票据数量:</label>
                        <span id="available_billsno">
                            <span  class="'.$span_class.'">'.$available_number.'</span>
                            <span  style="color:red;">'.$msg.'</span>
                        </span>
                    </div>';
    
    $pagecontent .= build_alloc_actionbtn($apply_id,$can_approve);
    return $pagecontent;
}

function get_apply_by_id($apply_id){
     $query = db_select('bills_apply', 'ba')
                ->fields('ba')
                ->condition('ba.apply_id',$apply_id,'=');
     $apply = $query->execute()->fetchAssoc();
     return $apply;
}

function get_available_number($type){
    $query = db_query("select billsno from bills where type='$type' and status='可用'");
    $available_number = $query->fetchAll();
    return $available_number;
}

function build_alloc_actionbtn($apply_id,$can_approve){
    $pagecontent = '';
    $pagecontent .= '<div>';
    if($can_approve == 1){
        $pagecontent .= '<input type="button" style="clear:both;"
           id="bills_approve" name="op" value="批准" class="form-submit"></input>';
    }
    $pagecontent .= '<input type="button" style="clear:both;"
       id="bills_disapprove" name="op" value="拒绝" class="form-submit"></input>';
    $pagecontent .= '<input type="hidden" name="apply_id" value="' . $apply_id . '" id="apply_id"></input></div>';
    return $pagecontent;
}

function build_alloc_table($apply_id){
     $header = array(
        array('data' => t('用途')),
        array('data' => t('数量')),
    );

    $query = db_select('bills_allocation', 'balloc')
                    ->extend('PagerDefault');

    $fields = array('bills_alloc_use', 'bills_number');

    $query->fields('balloc', $fields);
    $result = $query
        ->condition('balloc.apply_id',$apply_id,'=')
        ->orderBy('balloc.bills_alloc_use')
        ->execute();

    $rows = array();
    foreach ($result as $row) {
        $rows[] = array('data' => (array) $row);
    }

    $build['tablesort_table'] = array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
    );

    $build['pager_pager'] = array('#theme' => 'pager');

    $pagecontent = drupal_render($build);
    return $pagecontent;
}
function bills_audit_theme() {
    return array(
        'bills_audit' => array(
            'template' => 'bills_audit',
        ),
    );
}
