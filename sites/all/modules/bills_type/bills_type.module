<?php

// $Id: bills_type.info,v 1.4 2011/07/04 13:25:57 dries Exp $

/**
 * Implementation of hook_init
 */
function bills_type_init() {

}

/**
 * Implements hook_help().
 */
function bills_type_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bills_type':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('票据类型管理');
            return $output;
    }
}

/**
 * Implements hook_permission().
 */
function bills_type_permission() {
    return array(
        'bills_type' => array(
            'title' => t('票据类型管理'),
        ),
    );
}

function bills_type_menu() {
    $items = array();
    $items['billstype'] = array(
        'title' => t('票据类型管理'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_type_create_form'),
        'access arguments' => array('bills_type'),
        'file' => 'bills_type_create.inc',
        'weight' => 8,
    );

    $items['billstype/%/delete'] = array(
        'title' => t('票据类型管理'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_type_delete_form',1),
        'access arguments' => array('bills_type'),
        'file' => 'bills_type_delete.inc',
        'weight' => 8,
    );

    $items['billstype/%/update'] = array(
        'title' => t('票据类型管理'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_type_update_form',1),
        'access arguments' => array('bills_type'),
        'file' => 'bills_type_update.inc',
        'weight' => 8,
    );
    return $items;
}


function get_bills_type(){
    $fields = array('type_id', 'type_name');
    $query = db_select('bills_type', 'b'); 
    $query->fields('b', $fields);
    $result = $query->orderBy('b.type_id')
                    ->execute();
    $rows = array();
    $rows = array( '' => ' - 选择 - ',);

    foreach ($result as $row) {
        $rows[$row->type_name] = $row->type_name;
    }
    return $rows;
}


function get_type_name_by_id($type_id){
    $type_name = db_select('bills_type')->fields('bills_type',array('type_name'))
        ->condition('type_id', $type_id)
        ->execute()->fetchField();
    return $type_name;
}

function is_have_bills($type_name){
   $type = db_select('bills')->fields('bills')
        ->condition('type', $type_name)
        ->execute()->fetchField();
   return $type;
}

function get_type_useful($type_id){
    $fields = array('typeuseful_id', 'userf_name');
    $query = db_select('bills_type_useful', 'btu');
    $query->fields('btu', $fields);
    $result = $query
                    ->condition('type_id', $type_id)
                    ->orderBy('btu.typeuseful_id')
                    ->execute();
    $rows = array();
     foreach ($result as $row) {
        $rows[$row->typeuseful_id] = $row->userf_name;
    }

    if(count($rows) == 0){
        $rows[0] = '';
    }
    return $rows;
}

function type_name_is_exist($type_name, $type_id = -1) {
    $query = db_select('bills_type')->fields('bills_type', array('type_name'))
                    ->condition('type_name', $type_name, '=');
    if ($type_id != -1) {
        $query->condition('type_id', $type_id, '!=');
    }
    $type_name = $query->execute()->fetchField();
    return $type_name;
}