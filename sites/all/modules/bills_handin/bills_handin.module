<?php

// $Id: bills_handin.info,v 1.4 2011/07/04 13:25:57 dries Exp $

/**
 * Implementation of hook_init
 */
function bills_handin_init() {

}

/**
 * Implements hook_help().
 */
function bills_handin_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bills_handin':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('票据缴销');
            return $output;
    }
}

/**
 * Implements hook_permission().
 */
function bills_handin_permission() {
    return array(
        'bills_handin' => array(
            'title' => t('票据缴销'),
        ),
    );
}

function bills_handin_menu() {
    $items = array();
    $items['billshandin'] = array(
        'title' => t('票据缴销'),
        'page callback' => 'bills_handin_call_back',
        'access arguments' => array('bills_handin'),
        'weight' => 0,
    );
    
    return $items;
}

function bills_handin_call_back() {
    $pagecontent = '';
    $pagecontent .=  drupal_render(drupal_get_form("bills_handin_form"));
    return $pagecontent;
}

function bills_handin_form($form, &$form_state) {
    $form['description'] = array(
    '#markup' => '<div>' . t('')
    . '</div>',
  );

  // Because we have many fields with the same values, we have to set
  // #tree to be able to access them.
  $form['#tree'] = TRUE;
  $form['names_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('People coming to the picnic'),
    // Set up the wrapper so that AJAX will be able to replace the fieldset.
    '#prefix' => '<div id="names-fieldset-wrapper">',
    '#suffix' => '</div>',
  );

  // Build the fieldset with the proper number of names. We'll use
  // $form_state['num_names'] to determine the number of textfields to build.
  if (empty($form_state['num_names'])) {
    $form_state['num_names'] = 1;
  }
  for ($i = 0; $i < $form_state['num_names']; $i++) {
    $form['names_fieldset']['name'][$i] = array(
      '#type' => 'textfield',
      '#title' => t('Name'),
    );
  }
  $form['names_fieldset']['add_name'] = array(
    '#type' => 'submit',
    '#value' => t('Add one more'),
    '#submit' => array('bills_handin_add_more_add_one'),
    // See the examples in bills_handin.module for more details on the
    // properties of #ajax.
    '#ajax' => array(
      'callback' => 'bills_handin_add_more_callback',
      'wrapper' => 'names-fieldset-wrapper',
    ),
  );
  if ($form_state['num_names'] > 1) {
    $form['names_fieldset']['remove_name'] = array(
      '#type' => 'submit',
      '#value' => t('Remove one'),
      '#submit' => array('bills_handin_add_more_remove_one'),
      '#ajax' => array(
        'callback' => 'bills_handin_add_more_callback',
        'wrapper' => 'names-fieldset-wrapper',
      ),
    );
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

//  // This simply allows us to demonstrate no-javascript use without
//  // actually turning off javascript in the browser. Removing the #ajax
//  // element turns off AJAX behaviors on that element and as a result
//  // ajax.js doesn't get loaded.
//  // For demonstration only! You don't need this.
//  if ($no_js_use) {
//    // Remove the #ajax from the above, so ajax.js won't be loaded.
//    if (!empty($form['names_fieldset']['remove_name']['#ajax'])) {
//      unset($form['names_fieldset']['remove_name']['#ajax']);
//    }
//    unset($form['names_fieldset']['add_name']['#ajax']);
//  }

  return $form;
}

/**
 * Callback for both ajax-enabled buttons.
 *
 * Selects and returns the fieldset with the names in it.
 */
function bills_handin_add_more_callback($form, $form_state) {
  return $form['names_fieldset'];
}

/**
 * Submit handler for the "add-one-more" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function bills_handin_add_more_add_one($form, &$form_state) {
  $form_state['num_names']++;
  $form_state['rebuild'] = TRUE;
}

/**
 * Submit handler for the "remove one" button.
 *
 * Decrements the max counter and causes a form rebuild.
 */
function bills_handin_add_more_remove_one($form, &$form_state) {
  if ($form_state['num_names'] > 1) {
    $form_state['num_names']--;
  }
  $form_state['rebuild'] = TRUE;
}