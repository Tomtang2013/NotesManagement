<?php

// $Id: bills_billing.info,v 1.4 2011/07/04 13:25:57 dries Exp $

/**
 * Implementation of hook_init
 */
function bills_billing_init() {

}

/**
 * Implements hook_help().
 */
function bills_billing_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bills_billing':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('开具票据');
            return $output;
    }
}

/**
 * Implements hook_permission().
 */
function bills_billing_permission() {
    return array(
        'bills_billing' => array(
            'title' => t('开具票据'),
        ),
    );
}

function bills_billing_menu() {
    $items = array();
    $items['billsbilling'] = array(
        'title' => t('票据开具'),
        'page callback' => 'bills_billing_callback',
//        'page arguments' => array('bills_billing_form'),
        'access arguments' => array('bills_billing'),
        'weight' => 60,
    );

    $items['billing/bills_type_change_callback'] = array(
        'page callback' => 'bills_type_change_callback',
        'type' => MENU_CALLBACK,
        'access arguments' => array('bills_billing'),
    );

    $items['billing/bills_billing_submit'] = array(
        'page callback' => 'bills_billing_submit',
        'type' => MENU_CALLBACK,
        'access arguments' => array('bills_billing'),
    );

    $items['billsbillingcheck'] = array(
        'title' => t('支票开具'),
        'page callback' => 'bills_billing_check_callback',
//        'page arguments' => array('bills_billing_form'),
        'access arguments' => array('bills_billing'),
        'weight' => 60,
    );

    $items['billsbillingcheck/bills_billing_submit'] = array(
        'page callback' => 'bills_billing_check_submit',
        'type' => MENU_CALLBACK,
        'access arguments' => array('bills_billing'),
    );
    

    return $items;
}

function bills_billing_check_callback(){
    $page_content = '';
    $page_content .= theme('bills_billing_check');
    return $page_content;
}

function bills_billing_check_submit(){
    $data = $_POST['data'];
    $bills_no = $data['no'];
    $org = $data['org'];
    $account = $data['account'];
    $usefor = $data['usefor'];
    $money = $data['money'];

     global $user;
    $amount = 0;
    $usf_fields = array('bills_no','payment_content','number','unit_price');
    $query_usf = db_insert('bills_billing_detail')->fields($usf_fields);

    foreach ($usfs as $usf) {
        $query_usf->values(array(
            'bills_no' => $bills_no,
            'payment_content' => $usf['content'],
            'number' => $usf['number'],
            'unit_price' => $usf['unit_price'],
        ));
        $amount+=$usf['number'] * $usf['unit_price'];
    }

    $value[] = array(
        'bills_no'=> $bills_no,
        'payment_unit' => $unit,
        'payment_method' => $method,
        'amount' => $amount,
        'contact' => $contact,
        'update_date' => time(),
    );
    $fields = array('bills_no','payment_unit','payment_method', 'amount','contact','update_date');

    $query = db_insert('bills_billing')->fields($fields)->values($value);
    $update_query = db_update('bills')
      ->fields(array(
        'status' => '已开具',
        'amount' => $amount,
      ))
      ->condition('billsno', $bills_no, '=');
    $transaction = db_transaction();
    try {
        $query_usf->execute();
        $query->execute();
        $update_query->execute();
        bills_log_write_row($bills_no,$user->uid,'开具');
        drupal_set_message(t("票据开具成功"));
    } catch (Exception $e) {
        $transaction->rollback();
        watchdog_exception('billing error', $e);
        drupal_set_message('票据开具失败，请联系管理员', 'error');
    }
}

function bills_billing_callback(){
    $page_content = '';
    $page_content .= theme('bills_billing_main');
    return $page_content;
}

function bills_billing_theme() {
    return array(
        'bills_billing_main' => array(
            'template' => 'bills_billing_main',
            'path' => drupal_get_path('module', 'bills_billing')
        ),
        'bills_billing_check' => array(
            'template' => 'bills_billing_check',
            'path' => drupal_get_path('module', 'bills_billing')
        ),

    );
}

function get_billingable_bills_type(){
    $query = db_select('bills', 'b');
    global $user;
    $result = array();

    $query->fields('b', array('type'))
        ->condition('distribution_uid',$user->uid,'=')
        ->groupBy('b.type');
    $result = $query->execute();

    $rows = array();
    foreach ($result as $row) {
        $rows[$row->type] = $row->type;
    }
    return $rows;
}

function bills_type_change_callback(){
    $type =$_POST['type'];
    $ava_no = get_ava_bills_no($type);
    $ava_type_useful = get_type_useful_by_name($type);
    
    $rst = array(
        'ava_no' =>$ava_no,
        'ava_type_useful' =>$ava_type_useful,
    );
   
    echo drupal_json_output($rst);
}

function get_ava_bills_no($type){
    
    $query = db_select('bills', 'b');
    global $user;
    $result = array();

    $query->fields('b', array('billsno'))
        ->condition('status', '已分配', '=')
        ->condition('type', $type, '=')
        ->condition('distribution_uid',$user->uid,'=')
        ->orderBy('billsno');
    $result = $query->execute()->fetchField() ;
    return $result;
}

function bills_billing_submit(){
    $data = $_POST['data'];
    $bills_no = $data['no'];
    $unit = $data['unit'];
    $method = $data['method'];
    $contact = $data['contact'];
    $usfs = $data['usf'];

    global $user;
    $amount = 0;
    $usf_fields = array('bills_no','payment_content','number','unit_price');
    $query_usf = db_insert('bills_billing_detail')->fields($usf_fields);
    
    foreach ($usfs as $usf) {
        $query_usf->values(array(
            'bills_no' => $bills_no,
            'payment_content' => $usf['content'],
            'number' => $usf['number'],
            'unit_price' => $usf['unit_price'],
        ));
        $amount+=$usf['number'] * $usf['unit_price'];
    }
   
    $value[] = array(
        'bills_no'=> $bills_no,
        'payment_unit' => $unit,
        'payment_method' => $method,
        'amount' => $amount,
        'contact' => $contact,
        'update_date' => time(),
    );
    $fields = array('bills_no','payment_unit','payment_method', 'amount','contact','update_date');

    $query = db_insert('bills_billing')->fields($fields)->values($value);
    $update_query = db_update('bills')
      ->fields(array(
        'status' => '已开具',
        'amount' => $amount,
      ))
      ->condition('billsno', $bills_no, '=');
    $transaction = db_transaction();
    try {
        $query_usf->execute();
        $query->execute();
        $update_query->execute();
        bills_log_write_row($bills_no,$user->uid,'开具');
        drupal_set_message(t("票据开具成功"));
    } catch (Exception $e) {
        $transaction->rollback();
        watchdog_exception('billing error', $e);
        drupal_set_message('票据开具失败，请联系管理员', 'error');
    }
}

