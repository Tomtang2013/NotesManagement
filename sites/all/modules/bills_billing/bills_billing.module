<?php

// $Id: bills_billing.info,v 1.4 2011/07/04 13:25:57 dries Exp $

/**
 * Implementation of hook_init
 */
function bills_billing_init() {
      drupal_add_js(drupal_get_path('module', 'bills_billing') . '/print_js/LodopFuncs.js');
      drupal_add_js(drupal_get_path('module', 'bills_billing') . '/print_js/print_js.js');
}

/**
 * Implements hook_help().
 */
function bills_billing_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bills_billing':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('开具票据');
            return $output;
    }
}

/**
 * Implements hook_permission().
 */
function bills_billing_permission() {
    return array(
        'bills_billing' => array(
            'title' => t('开具票据'),
        ),
    );
}

function bills_billing_menu() {
    $items = array();
    $items['billsbilling'] = array(
        'title' => t('票据开具'),
        'page callback' => 'bills_billing_callback',
//        'page arguments' => array('bills_billing_form'),
        'access arguments' => array('bills_billing'),
        'weight' => 60,
         'file' => 'bills_billing.inc',
    );

    $items['billing/bills_type_change_callback'] = array(
        'page callback' => 'bills_type_change_callback',
        'type' => MENU_CALLBACK,
        'access arguments' => array('bills_billing'),

    );

    $items['billing/bills_billing_submit'] = array(
        'page callback' => 'bills_billing_submit',
        'type' => MENU_CALLBACK,
        'access arguments' => array('bills_billing'),
        'file' => 'bills_billing.inc',
    );

    $items['billsbillingcheck'] = array(
        'title' => t('支票开具'),
        'page callback' => 'bills_billing_check_callback',
//        'page arguments' => array('bills_billing_form'),
        'access arguments' => array('bills_billing'),
        'file' => 'bills_billing_check.inc',
        'weight' => 60,
    );

    $items['billsbillingcheck/bills_billing_auto'] = array(
        'page callback' => 'bills_billing_check_auto',
        'type' => MENU_CALLBACK,
        'access arguments' => array('bills_billing'),
         'file' => 'bills_billing_check.inc',
    );
    
    $items['billsbillingcheck/bills_billing_submit'] = array(
        'page callback' => 'bills_billing_check_submit',
        'type' => MENU_CALLBACK,
        'access arguments' => array('bills_billing'),
         'file' => 'bills_billing_check.inc',
    );
    

    return $items;
}

function bills_billing_theme() {
    return array(
        'bills_billing_main' => array(
            'template' => 'bills_billing_main',
            'path' => drupal_get_path('module', 'bills_billing')
        ),
        'bills_billing_check' => array(
            'template' => 'bills_billing_check',
            'path' => drupal_get_path('module', 'bills_billing')
        ),

    );
}


function bills_type_change_callback(){
    $type =$_POST['type'];
    $ava_no = get_ava_bills_no($type);
    $ava_type_useful = get_type_useful_by_name($type);

    $rst = array(
        'ava_no' =>$ava_no,
        'ava_type_useful' =>$ava_type_useful,
    );

    echo drupal_json_output($rst);
}


function get_billingable_bills_type(){
    $query = db_select('bills', 'b');
    global $user;
    $result = array();

    $query->fields('b', array('type'))
        ->condition('distribution_uid',$user->uid,'=')
        ->groupBy('b.type');
    $result = $query->execute();

    $rows = array();
    foreach ($result as $row) {
        if( $row->type == '支票')continue;
        $rows[$row->type] = $row->type;
    }
    return $rows;
}


function get_ava_bills_no($type){
    
    $query = db_select('bills', 'b');
    global $user;
    $result = array();

    $query->fields('b', array('billsno'))
        ->condition('status', '已分配', '=')
        ->condition('type', $type, '=')
        ->condition('distribution_uid',$user->uid,'=')
        ->orderBy('billsno');
    $result = $query->execute()->fetchField() ;
    return $result;
}

function toCNcap($data){
   $capnum=array("零","壹","贰","叁","肆","伍","陆","柒","捌","玖");
   $capdigit=array("","拾","佰","仟");
   $subdata=explode(".",$data);
   $yuan=$subdata[0];
   $j=0; $nonzero=0;
   for($i=0;$i<strlen($subdata[0]);$i++){
      if(0==$i){ //确定个位
         if($subdata[1]){
            $cncap=(substr($subdata[0],-1,1)!=0)?"元":"元零";
         }else{
            $cncap="元";
         }
      }
      if(4==$i){ $j=0;  $nonzero=0; $cncap="万".$cncap; } //确定万位
      if(8==$i){ $j=0;  $nonzero=0; $cncap="亿".$cncap; } //确定亿位
      $numb=substr($yuan,-1,1); //截取尾数
      $cncap=($numb)?$capnum[$numb].$capdigit[$j].$cncap:(($nonzero)?"零".$cncap:$cncap);
      $nonzero=($numb)?1:$nonzero;
      $yuan=substr($yuan,0,strlen($yuan)-1); //截去尾数
      $j++;
   }

   if($subdata[1]){
     $chiao=(substr($subdata[1],0,1))?$capnum[substr($subdata[1],0,1)]."角":"零";
     $cent=(substr($subdata[1],1,1))?$capnum[substr($subdata[1],1,1)]."分":"零分";
   }
   $cncap .= $chiao.$cent."整";
   $cncap=preg_replace("/(零)+/","\\1",$cncap); //合并连续“零”
   return $cncap;
 }