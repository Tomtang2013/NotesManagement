<?php

// $Id: bills_search.info,v 1.4 2011/07/04 13:25:57 dries Exp $

/**
 * Implementation of hook_init
 */
function bills_search_init() {
      drupal_add_js(drupal_get_path('module', 'bills_billing') . '/print_js/LodopFuncs.js');
      drupal_add_js(drupal_get_path('module', 'bills_billing') . '/print_js/print_js.js');
}

/**
 * Implements hook_help().
 */
function bills_search_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bills_search':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('票据检索');
            return $output;
    }
}

/**
 * Implements hook_permission().
 */
function bills_search_permission() {
    return array(
        'bills_search' => array(
            'title' => t('票据检索'),
        ),
    );
}

function bills_search_menu() {
    $items = array();
    $items['billssearch'] = array(
        'title' => t('票据检索'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_search_form'),
        'access arguments' => array('bills_search'),
        'weight' => 110,
    );

     $items['billssearch/print/%'] = array(
        'title' => t('票据打印'),
        'page callback' => 'bills_print_call_back',
        'page arguments' => array(2),
        'access arguments' => array('bills_search'),
    );

    return $items;
}

function set_search_value($get, &$form_state, $key) {
    if (!empty($get[$key])) {
        $form_state['values'][$key] = $get[$key];
    }else {
        $form_state['values'][$key] = '';
    }
}

function set_search_url(&$array, &$form_state, $key) {
    if (!empty($form_state['values'][$key])) {
        $array[$key] = $form_state['values'][$key];
    } 
}

function bills_search_form($form, &$form_state) {
    if ($_GET && empty($form_state['pager_click']) ) {
        set_search_value($_GET, $form_state, 'bills_no_start');
        set_search_value($_GET, $form_state, 'bills_no_end');
        set_search_value($_GET, $form_state, 'bills_user');
        set_search_value($_GET, $form_state, 'bills_status');
        set_search_value($_GET, $form_state, 'bills_type');
        set_search_value($_GET, $form_state, 'billing_date_start');
        set_search_value($_GET, $form_state, 'billing_date_end');
        set_search_value($_GET, $form_state, 'amount');
        set_search_value($_GET, $form_state, 'report_date_start');
        set_search_value($_GET, $form_state, 'report_date_end');
    }

    $header = array(
        'billsno' => t('编号'),
        'type' => t('类型'),
        'status' => t('状态'),
        'u_name' => t('开票员'),
        'billing_date' => t('开票日期'),
        'org' => t('付款单位/个人'),
        'amount' => t('金额'),
        'report_date' => t('结报日期'),
//        'opt' => t('重置'),
    );
    $query = db_select('bills', 'b');


    $fields = array('billsno', 'type', 'status', 'amount', 'report_date');

    global $user;

    $query->fields('b', $fields);
    $query->addField('u', 'name');
    $query->addField('bb', 'update_date');
    $query->addField('bb', 'payment_unit');
//    $query->leftJoin('users', 'u', 'u.uid = b.distribution_uid');
    $query->leftJoin('users', 'u', 'u.uid = b.distribution_uid');
    $query->leftJoin('bills_billing', 'bb', 'b.billsno = bb.bills_no');
    $query->orderBy('b.billsno');
    $query = $query->extend('PagerDefault');
    $query->limit(10);
    $query = set_condition($query, $form_state);
    if($user->uid!=1){
        $query->condition('u.uid', $user->uid);
    }
   
    $str_query = $query;

    $result = $str_query->execute();

    $rows = array();
    
    foreach ($result as $row) {
        $status = $row->status;
        if($status == '已开具')
            $status = $status.l(t(' 打印'), 'billssearch/print/'.$row->billsno,
                    array('attributes' => array('class' =>'print-link'),'html' => true));
        $rows[] = array(
            'billsno' => $row->billsno,
            'type' => $row->type,
            'status' => $status, //$row->status,
            'u_name' => $row->name,
            'billing_date' => empty($row->update_date) ? '' : date("Y-m-d", $row->update_date),
            'org' => $row->payment_unit,
            'amount' => $row->amount,
            'report_date' => empty($row->report_date) ? '' : date("Y-m-d", $row->report_date),
//            'opt' =>  l(t('重置'), 'billssearch/print/'.$row->billsno),
        );
    }
    $form = array();
    $form['search_box'] = array(
        '#type' => 'fieldset',
        '#title' => t('检索'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
    );

    $form['search_box']['bills_no_start'] = array(
        '#type' => 'textfield',
        '#size' => 20,
        '#title' => t('起始编号'),
        '#prefix' => '<div id="first_line">',
        '#default_value' => $form_state['values']['bills_no_start'],
    );

    $form['search_box']['bills_no_end'] = array(
        '#type' => 'textfield',
        '#size' => 20,
        '#title' => t('截止编号'),
        '#default_value' => $form_state['values']['bills_no_end'],
    );

    $form['search_box']['bills_user'] = array(
        '#type' => 'textfield',
        '#size' => 20,
        '#title' => t('开票员'),
        '#suffix' => '</div >',
        '#default_value' => $form_state['values']['bills_user'],
    );


    $form['search_box']['bills_type'] = array(
        '#type' => 'select',
        '#options' => get_bills_type(),
        '#title' => t('票据类型'),
        '#prefix' => '<div id="sec_line">',
         '#default_value' => $form_state['values']['bills_type'],
    );

    $form['search_box']['bills_status'] = array(
        '#type' => 'select',
        '#options' => array('' => ' - 选择 - ', '可用' => '可用', '已分配' => '已分配', '已开具' => '已开具',
            '已作废' => '已作废', '已缴销' => '已缴销', '已确认' => '已确认',
            '已退回' => '已退回', '已报错' => '已报错', '已结报' => '已结报',),
        '#title' => t('票据状态'),
         '#default_value' => $form_state['values']['bills_status'],
    );

    $form['search_box']['amount'] = array(
        '#type' => 'textfield',
        '#size' => 20,
        '#title' => t('金额'),
        '#suffix' => '</div >',
          '#default_value' => $form_state['values']['amount'],
    );

    $form['search_box']['billing_date_start'] = array(
        '#type' => 'datepicker',
        '#date_format' => 'd/m/Y',
        '#maxlength' => '10',
        '#title' => t('开票日期起'),
        '#prefix' => '<div id="sec_line">',
         '#default_value' => $form_state['values']['billing_date_start'],
    );

    $form['search_box']['billing_date_end'] = array(
        '#type' => 'datepicker',
        '#date_format' => 'd/m/Y',
        '#maxlength' => '10',
        '#title' => t('开票日期止'),
        '#default_value' => $form_state['values']['billing_date_end'],
    );


    $form['search_box']['report_date_start'] = array(
        '#type' => 'datepicker',
        '#date_format' => 'd/m/Y',
        '#maxlength' => '10',
        '#title' => t('结报日期起'),
        '#prefix' => '<div id="sec_line">',
         '#default_value' => $form_state['values']['report_date_start'],
    );


    $form['search_box']['report_date_end'] = array(
        '#type' => 'datepicker',
        '#date_format' => 'd/m/Y',
        '#maxlength' => '10',
        '#title' => t('结报日期止'),
        '#suffix' => '</div >',
        '#default_value' => $form_state['values']['report_date_end'],
    );

    $form['button'] = array(
        '#type' => 'submit',
        '#value' => '清空检索区',
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => '提交',
        '#suffix' => '<hr />'
    );
    
     $form['print'] = array(
        '#type' => 'item',
        '#title' => "",
        '#markup' => '<div style=";">' .theme('bills_search_print')
        . '</div>',
    );

    $form['table'] = array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
    );

    $values = array();
    $total = count($rows);
    if ($form_state && !empty($form_state['values'])) {
        $parameters = array();
        set_search_url($parameters, $form_state, 'bills_no_start');
        set_search_url($parameters, $form_state, 'bills_no_end');
        set_search_url($parameters, $form_state, 'bills_user');
        set_search_url($parameters, $form_state, 'bills_status');
        set_search_url($parameters, $form_state, 'bills_type');
        set_search_url($parameters, $form_state, 'billing_date_start');
        set_search_url($parameters, $form_state, 'billing_date_end');
        set_search_url($parameters, $form_state, 'amount');
        set_search_url($parameters, $form_state, 'report_date_start');
        set_search_url($parameters, $form_state, 'report_date_end');
        $values = array(
            'parameters' => $parameters,
            'quantity' => $total,
            'not_cover' => 1,
        );
    }
     

    $form['pager'] = array();
    $form['pager'] = array('#markup' => theme('pager', $values));
   
    return $form;
}

function set_condition($query, $form_state) {
    $query = get_form_value($query, $form_state, 'bills_no_start', 'b.billsno', '>=');
    $query = get_form_value($query, $form_state, 'bills_no_end', 'b.billsno', '<=');
    $query = get_form_value($query, $form_state, 'bills_user', 'u.name');
    $query = get_form_value($query, $form_state, 'bills_type', 'b.type');
    $query = get_form_value($query, $form_state, 'bills_status', 'b.status');
    $query = get_form_value($query, $form_state, 'billing_date_start', 'bb.update_date', '>=', true);
    $query = get_form_value($query, $form_state, 'billing_date_end', 'bb.update_date', '<=', true);
    $query = get_form_value($query, $form_state, 'amount', 'b.amount');
    $query = get_form_value($query, $form_state, 'report_date_start', 'b.report_date', '>=', true);
    $query = get_form_value($query, $form_state, 'report_date_end', 'b.report_date', '<=', true);
    return $query;
}

function get_form_value($query, $form_state, $key, $field, $op = '=', $isdate = false) {
    $value = '';
    if (!empty($form_state['values'][$key])) {
        $value = $form_state['values'][$key];
        if ($isdate && !is_array($value)){
            $value = strtotime($value);
        }
        $query->condition($field, $value, $op);
    }
    return $query;
}

function bills_search_form_validate($form, &$form_state) {
    if ($form_state['values']['op'] == '清空检索区')
        return;
    $start = $form_state['values']['bills_no_start'];
    $end = $form_state['values']['bills_no_end'];
    $no_error = false;
    if (!empty($start) && !is_int($start) && $start + 0 == 0) {
        form_set_error('bills_no_start', t('起始编号必须是数字.'));
        $no_error = true;
    }

    if (!empty($end) && !is_int($end) && $end + 0 == 0) {
        form_set_error('bills_no_end', t('结束编号必须是数字.'));
        $no_error = true;
    }

    if ($no_error == false && $start > $end) {
        form_set_error('bills_no_start', t('结束编号不能小于起始编号。'));
    }
}

function bills_search_form_submit($form, &$form_state) {
    if ($form_state['values']['op'] == '清空检索区'){
        drupal_goto('billssearch');
    } else {
         $form_state['pager_click'] = true;
         $form_state['rebuild'] = TRUE;
    }
   
}

function bills_search_theme() {
    return array(
        'bills_search_print' => array(
            'template' => 'bills_search_print',
            'path' => drupal_get_path('module', 'bills_search')
        ),
//        'bills_billing_check' => array(
//            'template' => 'bills_billing_check',
//            'path' => drupal_get_path('module', 'bills_billing')
//        ),
    );
}

function bills_print_call_back($bills_no){
    $query = db_select('bills', 'b');
    $fields = array('billsno', 'type', 'status', 'amount','createdate');
    $query->fields('b', $fields);
    $query->condition('billsno',$bills_no);
    $bills = $query->execute()->fetchObject();
    global $user;
    $return = array();
    $return['name'] = $user->name;
    
    if($bills->type == '支票'){
        $query_check = db_select('bills_billing_check', 'bbc');
        $query_check->fields('bbc', array('bills_no', 'account', 'org', 'bank','usefor'));
        $query_check->condition('bills_no',$bills_no);
        $result = $query_check->execute()->fetchObject();
        $return['account'] = $result->account;
        $return['pop'] = $result->usefor;
        $return['year'] = date("Y",$bills->createdate);
        $return['month'] = date("m",$bills->createdate);
        $return['day'] = date("d",$bills->createdate);
        $return['amount'] = $bills->amount;
        $return['type'] = 'check';
    } else {
        $query_detail = db_select('bills_billing_detail', 'bbd');
        $query_detail->fields('bbd', array('payment_content', 'number', 'unit_price'));
        $query_detail->condition('bills_no',$bills_no);
        $results = $query_detail->execute()->fetchAll();
        $items = array();
        foreach($results as $row){
            $items[] = array('content'=>$row->payment_content,'amount'=>($row->number * $row->unit_price));
        }
        $return['items'] = $items;
        $return['today'] = date('Y/m/d', $bills->createdate);
        $return['type'] = 'bills';
        $return['amount'] = $bills->amount;
    }
    drupal_json_output($return);
}