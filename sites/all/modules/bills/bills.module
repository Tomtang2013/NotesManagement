<?php

// $Id: bills.info,v 1.4 2011/07/04 13:25:57 dries Exp $

/**
 * Implementation of hook_init
 */
function bills_init() {

}

/**
 * Implements hook_help().
 */
function bills_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bills':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('入库管理');
            return $output;
    }
}

/**
 * Implements hook_permission().
 */
function bills_permission() {
    return array(
        'bills' => array(
            'title' => t('入库管理'),
        ),
    );
}

function bills_menu() {
    $items = array();
    $items['bills'] = array(
        'title' => t('入库管理'),
       'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_create_form'),
        'access arguments' => array('bills'),
        'weight' => 0,
    );

    $items['billsdistribution'] = array(
        'title' => t('票据分配'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_distribution_form'),
        'access arguments' => array('bills_distribution'),
        'file' => 'bills_distribution.inc',
        'weight' => 10,
    );

    $items['billssummary'] = array(
        'title' => t('上级单位结报'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_summary_form'),
        'access arguments' => array('bills_summary'),
        'file' => 'bills_summary.inc',
        'weight' => 20,
    );

    $items['billswrong'] = array(
        'title' => t('错票处理'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_wrong_form'),
        'access arguments' => array('bills_wrong'),
        'file' => 'bills_wrong.inc',
        'weight' => 30,
    );

    $items['billsdisable'] = array(
        'title' => t('废票处理'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bills_disable_form'),
        'access arguments' => array('bills_disable'),
        'file' => 'bills_disable.inc',
        'weight' => 40,
    );


    return $items;
}

function bills_status_page_call_back() {
    $pagecontent = drupal_render(bills_list());
    $pagecontent .= "<hr/>";
    $pagecontent .= drupal_render(drupal_get_form("bills_create_form"));

    return $pagecontent;
}

function bills_create_form($form, &$form_state) {

    $header = array(
        'type_name' => t('票据编号段'),
        'opt_update' => t('票据类型'),
        'opt_delete' => t('录入时间'),
    );

    $form = array();
//    $form['#tree'] = TRUE;
    $form['table'] = array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => bills_list_row(),
    );
    $form['pager'] = array('#markup' => theme('pager'));
    
    $form['description'] = array(
        '#type' => 'item',
        '#title' => t("票据录入"),
    );
    // This is the first form element. It's a textfield with a label, "Name"
    $form['billsno_start'] = array(
        '#type' => 'textfield',
        '#size' => '20',
        '#required' => TRUE,
        '#maxlength' => '10',
        '#title' => t('起始票据编号'),
    );

    $form['billsno_end'] = array(
        '#type' => 'textfield',
        '#size' => '20',
        '#required' => TRUE,
        '#maxlength' => '10',
        '#title' => t('结束票据编号'),
    );

    $form['billsno_type'] = array(
        '#type' => 'select',
        '#required' => TRUE,
        '#options' => get_bills_type(),
        '#title' => t('票据类型'),
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => '提交',
    );
    return $form;
}

function bills_create_form_validate($form, &$form_state) {
    $start = $form_state['values']['billsno_start'] + 0;
    $end = $form_state['values']['billsno_end'] + 0;
    if (!is_int($start) || $start<=0)
        form_set_error('billsno_start', t('起始票据编号必须是数字.'));
    if (!is_int($end) || $end<=0)
        form_set_error('billsno_end', t('结束票据编号必须是数字.'));
    if ($start > $end) {
        form_set_error('billsno_end', t('结束票据编号不能小于起始票据编号。'));
    }
}

function bills_create_form_submit($form, &$form_state) {
    $start = $form_state['values']['billsno_start'] + 0;
    $end = $form_state['values']['billsno_end'] + 0;
    $type = $form_state['values']['billsno_type'];
    $amount = 0;
    $values = array();
    for ($i = $start; $i <= $end; $i++) {
        $values[] = array(
            'billsno' => $i,
            'type' => $type,
            'status' => '可用',
            'amount' => 0,
            'createdate' => time(),
            'lastupdate' => time(),
        );
    }
    $fields = array('billsno', 'type', 'status', 'amount', 'createdate', 'lastupdate');

    $query = db_insert('bills')->fields($fields);
    foreach ($values as $record) {
        $query->values($record);
    }

    try {
        $result = $query->execute();
        drupal_set_message(t("票据录入成功"));
    } catch (Exception $e) {
        watchdog_exception('bills input error', $e);
        drupal_set_message('票据录入失败，请联系管理员', 'error');
    }
}

function bills_list_row() {

    $query = db_query("select concat(min(billsno),'~',max(billsno)) as nos,type,createdate
                        from bills b
                        group by createdate");

    $result = $query->fetchAll();

    $rows = array();
    foreach ($result as $row) {
        $rows[] = array(
            'nos' => $row->nos,
             'type'=>  $row->type,
             'createdate' => empty($row->createdate) ? '' : date("Y-m-d", $row->createdate),
        );
    }
   
    return $rows;
}
